(in-package :yggdrasil)

;; Created nested Context System

(defun init-context-menu (&optional (font *default-font*))
  (let (x y
	text-width text-height
	menu-width menu-height
	contents (font font))

    (defun menu-change-font (new-font)
      (setf font new-font))

    
    (defun menu-create (x-position y-position items &optional (font *default-font*))
      (setf x x-position
	    y y-position
	    contents items)
      
      (multiple-value-bind (w h) (text-size (elt items 0) font)
	(setf text-width w
	      text-height h))
      
      (multiple-value-bind (w h) (get-total-text-size items font)
	(setf menu-width w
	      menu-height h)))

    (defun menu-select-item ()
      (let ((adjusted-y y))
	(dolist (item contents)
	  (when (mouse-collision-check (make-instance 'rectangle :x x :y adjusted-y :w menu-width :h text-height))
	    (return-from menu-select-item item))
	  (incf adjusted-y text-height))))
    
    (defun menu-draw (&optional (color (get-color blue)))
	(draw-rectangle (vector (- x 5)  y  (+ menu-width 5) (+ menu-height 5)) :filled t :color (get-color gray))
	(let ((adjusted-y y))
	  (dolist (item contents)
	    (if (mouse-collision-check (make-instance 'rectangle :x x :y adjusted-y :w menu-width :h text-height))
		(yg:draw-string x adjusted-y item :draw-type :shaded :bg-color (get-color dark-gray))
		(yg:draw-string x adjusted-y item))
	    (incf adjusted-y (1+ text-height)))))))

